"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[62],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>u});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,u=d["".concat(l,".").concat(m)]||d[m]||g[m]||i;return r?n.createElement(u,o(o({ref:t},p),{},{components:r})):n.createElement(u,o({ref:t},p))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2969:(e,t,r)=>{r.d(t,{Z:()=>a});var n=r(7294);function a(e){let{children:t,color:r}=e;return n.createElement("span",{style:{backgroundColor:r,borderBottom:"3px solid var(--ifm-color-primary)",padding:"0 0 0.25rem 0",fontWeight:"bold"}},t)}},1125:(e,t,r)=>{r.d(t,{Z:()=>i});var n=r(2949),a=r(7294);function i(e){let{children:t,color:r}=e;const{colorMode:i}=(0,n.I)();return a.createElement("span",{style:{backgroundColor:r,borderBottom:"1px solid "+("dark"===i?" #fff":"#000"),padding:"0 0 0.25rem 0",fontWeight:800}},t)}},8534:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var n=r(7462),a=(r(7294),r(3905)),i=r(2969),o=r(1125);const s={sidebar_position:1,author:"Roy"},l="private registry \uc6a9\ub7c9 \ud655\ubcf4",c={unversionedId:"\ud2b8\ub7ec\ube14\uc288\ud305/1",id:"\ud2b8\ub7ec\ube14\uc288\ud305/1",title:"private registry \uc6a9\ub7c9 \ud655\ubcf4",description:"\ub514\uc2a4\ud06c \uc6a9\ub7c9 \ud655\uc778",source:"@site/docs/\ud2b8\ub7ec\ube14\uc288\ud305/1.mdx",sourceDirName:"\ud2b8\ub7ec\ube14\uc288\ud305",slug:"/\ud2b8\ub7ec\ube14\uc288\ud305/1",permalink:"/wiki/docs/\ud2b8\ub7ec\ube14\uc288\ud305/1",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\ud2b8\ub7ec\ube14\uc288\ud305/1.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,author:"Roy"},sidebar:"tutorialSidebar",previous:{title:"\ud2b8\ub7ec\ube14\uc288\ud305",permalink:"/wiki/docs/category/\ud2b8\ub7ec\ube14\uc288\ud305"}},p={},d=[{value:"\ub514\uc2a4\ud06c \uc6a9\ub7c9 \ud655\uc778",id:"\ub514\uc2a4\ud06c-\uc6a9\ub7c9-\ud655\uc778",level:2},{value:"\ub514\ub809\ud130\ub9ac \ubcc4 \uc6a9\ub7c9 \ud655\uc778",id:"\ub514\ub809\ud130\ub9ac-\ubcc4-\uc6a9\ub7c9-\ud655\uc778",level:2},{value:"\ub3c4\ucee4 \uc774\ubbf8\uc9c0 repositories \uc870\ud68c",id:"\ub3c4\ucee4-\uc774\ubbf8\uc9c0-repositories-\uc870\ud68c",level:2},{value:"\ub3c4\ucee4 \uc774\ubbf8\uc9c0 tags \uc870\ud68c",id:"\ub3c4\ucee4-\uc774\ubbf8\uc9c0-tags-\uc870\ud68c",level:2},{value:"\ub3c4\ucee4 \uc774\ubbf8\uc9c0 content digest \uc870\ud68c",id:"\ub3c4\ucee4-\uc774\ubbf8\uc9c0-content-digest-\uc870\ud68c",level:2},{value:"\ub3c4\ucee4 \uc774\ubbf8\uc9c0 manifest \uc0ad\uc81c",id:"\ub3c4\ucee4-\uc774\ubbf8\uc9c0-manifest-\uc0ad\uc81c",level:2},{value:"registry config \uc124\uc815 &amp; \uc7ac\uc2dc\uc791",id:"registry-config-\uc124\uc815--\uc7ac\uc2dc\uc791",level:3},{value:"\ub3c4\ucee4 GC(Garbage Collection) \uc2e4\ud589",id:"\ub3c4\ucee4-gcgarbage-collection-\uc2e4\ud589",level:2},{value:"\uc0ad\uc81c \uc2a4\ud06c\ub9bd\ud2b8 \uc791\uc131",id:"\uc0ad\uc81c-\uc2a4\ud06c\ub9bd\ud2b8-\uc791\uc131",level:2}],g={toc:d},m="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"private-registry-\uc6a9\ub7c9-\ud655\ubcf4"},"private registry \uc6a9\ub7c9 \ud655\ubcf4"),(0,a.kt)("h2",{id:"\ub514\uc2a4\ud06c-\uc6a9\ub7c9-\ud655\uc778"},"\ub514\uc2a4\ud06c \uc6a9\ub7c9 \ud655\uc778"),(0,a.kt)("p",null,"\ub3c4\ucee4\ub85c \uc11c\ube44\uc2a4 \uc6b4\uc601 \uc911\uc5d0 ",(0,a.kt)(o.Z,{mdxType:"UnderLine"},"\uc6b0\ubd84\ud22c disk \uc6a9\ub7c9\uc774 100%"),"\uac00 \ub418\uc5b4 \ubc30\ud3ec\uac00 \uc2e4\ud328\ub418\ub294 \uc774\uc288\uac00 \ubc1c\uc0dd\ub418\uc5c8\uc2b5\ub2c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:"{3-5}","{3-5}":!0},"df -h\n\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/nvme0n1p1  388G  388G    0G 100% /\n...\n")),(0,a.kt)("h2",{id:"\ub514\ub809\ud130\ub9ac-\ubcc4-\uc6a9\ub7c9-\ud655\uc778"},"\ub514\ub809\ud130\ub9ac \ubcc4 \uc6a9\ub7c9 \ud655\uc778"),(0,a.kt)("p",null,"\uac00\uc7a5 \uc6a9\ub7c9\uc744 \ub9ce\uc774 \ucc28\uc9c0\ud558\ub294 \ub514\ub809\ud130\ub9ac\ub97c \ud655\uc778\ud574\ubcf4\ub2c8 ",(0,a.kt)("inlineCode",{parentName:"p"},"/var/lib/registry")," \ub514\ub809\ud130\ub9ac\uac00 ",(0,a.kt)(o.Z,{mdxType:"UnderLine"},"355G")," \ucc28\uc9c0\ud558\uace0 \uc788\uc5c8\uc2b5\ub2c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:"{4-5}","{4-5}":!0},"# \ub514\ub809\ud130\ub9ac \uc6a9\ub7c9 \ud655\uc778\ndu -h --max-depth=1\n\n355G    ./docker\n355G    .\n")),(0,a.kt)("p",null,"\ud655\uc778\ud574\ubcf4\ub2c8 ",(0,a.kt)(i.Z,{mdxType:"Highlight"},"\ub3c4\ucee4 \uc774\ubbf8\uc9c0\ub97c \ubc30\ud3ec\ud560 \ub54c\ub9c8\ub2e4 \uac01 \ud0dc\uadf8 \uc815\ubcf4\ub97c blob \ud615\ud0dc\ub85c \ud30c\uc77c\ub85c \uc800\uc7a5\ub418\uace0 \uc788\uc5b4\uc11c \uc6a9\ub7c9\uc774 \ub192\uc558\uc2b5\ub2c8\ub2e4."),(0,a.kt)("br",null),"\n\uc2dc\uac04\uc774 \uc624\ub798 \uc9c0\ub09c \ud0dc\uadf8\uc5d0 \ub300\ud574\uc11c\ub294 \ud544\uc694\ud558\uc9c0 \uc54a\uc544 \ud574\ub2f9 \ud0dc\uadf8\uc5d0 \ub300\ud55c blob\uc744 \uc9c0\uc6cc \uc6a9\ub7c9\uc744 \ud655\ubcf4\ud558\ub824\uace0 \ud588\uc2b5\ub2c8\ub2e4.",(0,a.kt)("br",null)),(0,a.kt)("p",null,"\ud558\uc9c0\ub9cc \ubb34\uc791\uc815 ",(0,a.kt)("inlineCode",{parentName:"p"},"/var/lib/registry/docker/registry/v2/blobs")," \ud30c\uc77c\uc744 \uc804\ubd80 \uc0ad\uc81c\ud558\uae30\uc5d0\ub294 \uc704\ud5d8\ud558\uace0",(0,a.kt)("br",null),"\n\uc774\ubbf8\uc9c0 \ud0dc\uadf8\ub9c8\ub2e4 \uc758\uc874\ud558\uace0 \uc788\ub294 layer\uc640 blob \ub2ec\ub77c \ub2e4\uc74c\uacfc \uac19\uc740 \ubc29\ubc95\uc73c\ub85c \uc0ad\uc81c\ud558\uc600\uc2b5\ub2c8\ub2e4."),(0,a.kt)("h2",{id:"\ub3c4\ucee4-\uc774\ubbf8\uc9c0-repositories-\uc870\ud68c"},"\ub3c4\ucee4 \uc774\ubbf8\uc9c0 repositories \uc870\ud68c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:"{3-5}","{3-5}":!0},'curl -X GET <REGISTRY URL:\ud3ec\ud2b8>/v2/_catalog\n\n{"repositories":["acirstrapi","acirweb","baabfill-admin","baabfill-api","baabfill-web","baas.admin.was","baas.badd.was","baas.badd.web","baas.cwcar.web","baas.evking.app","baas.evking.was","baas.evking.web","baas.springbatch.was","baas.subcal.api","baas.subcal.web","badd.api","batchserver","chronograf","convertserver","csms-backend","csms-frontend","csms-websocket","ems-batch","ems-bridge","ems-schedule-batch","ems-statics-batch","ems.web.was","ev-data-compressor","ev_simulation","evmonadmmongo","grafana","kapacitor","keystone","mogi","nipaapi","p-ev","parseserver","parseserver_imas","pevapi","pmbis","pmcore","pmg-web","pmg.web.app","pmobd","pmpline","queuemaker","queuemaker_imas","r-ess","rproxy","safety.api","safety.web","statsadmin","sv-controlapi","sv-controlweb","telegraf","toc.web","webmonitor"]}\n')),(0,a.kt)("h2",{id:"\ub3c4\ucee4-\uc774\ubbf8\uc9c0-tags-\uc870\ud68c"},"\ub3c4\ucee4 \uc774\ubbf8\uc9c0 tags \uc870\ud68c"),(0,a.kt)("p",null,"\uc704\uc5d0\uc11c \uc870\ud68c\ub41c repositories \uc815\ubcf4\ub85c \ud0dc\uadf8 \uc815\ubcf4\ub97c \uc870\ud68c\ud588\uc2b5\ub2c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:"{3-5}","{3-5}":!0},'curl -X GET <REGISTRY URL:\ud3ec\ud2b8>/v2/<REPOSITORY \uc774\ub984>/tags/list\n\n{"name":"baas.admin.was","tags": ["23110502", "24010402" ...]}\n')),(0,a.kt)("h2",{id:"\ub3c4\ucee4-\uc774\ubbf8\uc9c0-content-digest-\uc870\ud68c"},"\ub3c4\ucee4 \uc774\ubbf8\uc9c0 content digest \uc870\ud68c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:"{3-5}","{3-5}":!0},"curl -v --silent -H \"Accept: application/vnd.docker.distribution.manifest.v2+json\" -X GET http://<REGISTRY URL:\ud3ec\ud2b8>/v2/<REPOSITORY \uc774\ub984>/manifests/<TAG \uc774\ub984> 2>&1 | grep Docker-Content-Digest | awk '{print ($3)}'\n\nsha256:d34d61487075d127bf6dd2906ea3abc50e0a3cd9aa2f230fc41b253b153a17ee\n")),(0,a.kt)("h2",{id:"\ub3c4\ucee4-\uc774\ubbf8\uc9c0-manifest-\uc0ad\uc81c"},"\ub3c4\ucee4 \uc774\ubbf8\uc9c0 manifest \uc0ad\uc81c"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:"{3-5}","{3-5}":!0},'curl -v --silent -H "Accept: application/vnd.docker.distribution.manifest.v2+json" -X DELETE http://<REGISTRY URL:\ud3ec\ud2b8>/v2/<REPOSITORY \uc774\ub984>/manifests/<DIGEST \uc815\ubcf4>\n')),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"curl\ub85c \uc0ad\uc81c \uc694\uccad\uc744 \ubcf4\ub0c8\ub294\ub370 \uc0ad\uc81c\ub418\uc9c0 \uc54a\ub294 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\ub294 \uacbd\uc6b0\uac00 \uc788\uc2b5\ub2c8\ub2e4.\n\uc774\ub7f0 \uacbd\uc6b0 registry config.yml \uc18d\uc131\uc5d0 delete.enable \uac12\uc744 true\ub85c \uc124\uc815\ud574\uc57c\ud569\ub2c8\ub2e4.")),(0,a.kt)("h3",{id:"registry-config-\uc124\uc815--\uc7ac\uc2dc\uc791"},"registry config \uc124\uc815 & \uc7ac\uc2dc\uc791"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="modified-config.yml" {3-20}',title:'"modified-config.yml"',"{3-20}":!0},"vi modified-config.yml\n\nversion: 0.1\nlog:\n  fields:\n    service: registry\nstorage:\n  cache:\n    blobdescriptor: inmemory\n  filesystem:\n    rootdirectory: /var/lib/registry\nhttp:\n  addr: :5000\n  headers:\n    X-Content-Type-Options: [nosniff]\nhealth:\n  storagedriver:\n    enabled: true\n    interval: 10s\n    threshold: 3\n")),(0,a.kt)("p",null,"\ud30c\uc77c\uc744 \uc0dd\uc131\ud558\uace0 docker registry\uc5d0 \ud574\ub2f9 config.yml \ud30c\uc77c\uc744 \ubcf5\uc0ac\ud558\uace0 \uc7ac\uc2dc\uc791\ud558\uace0 \ub2e4\uc2dc \uc0ad\uc81c \uc694\uccad\uc744 \ubcf4\ub0b4\uba74 \uc815\uc0c1 \ucc98\ub9ac\ub418\ub294 \uac83\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker cp modified-config.yml registry:/etc/docker/registry/config.yml\ndocker restart\n")),(0,a.kt)("h2",{id:"\ub3c4\ucee4-gcgarbage-collection-\uc2e4\ud589"},"\ub3c4\ucee4 GC(Garbage Collection) \uc2e4\ud589"),(0,a.kt)("p",null,"\uc0ad\uc81c \uc694\uccad\uc744 \ud55c \ub4a4 Garbage Collection \ud638\ucd9c\ud574\uc57c \uc2e4\uc81c\ub85c \ud30c\uc77c\uc774 \uc9c0\uc6cc\uc9d1\ub2c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker exec -it registry registry garbage-collect /etc/docker/registry/config.yml\n")),(0,a.kt)("h2",{id:"\uc0ad\uc81c-\uc2a4\ud06c\ub9bd\ud2b8-\uc791\uc131"},"\uc0ad\uc81c \uc2a4\ud06c\ub9bd\ud2b8 \uc791\uc131"),(0,a.kt)("p",null,"\uc774\ubbf8\uc9c0\uc640 \ud0dc\uadf8\ub4e4\uc774 \ub9ce\uc544 \uc77c\uc77c\ud788 \uc791\uc131\ud558\uae30 \uadc0\ucc2e\uc544 \uc2a4\ud06c\ub9bd\ud2b8\ub85c \uc791\uc131\ud558\uc600\uc2b5\ub2c8\ub2e4.",(0,a.kt)("br",null),"\n\ucd5c\uc2e0 latest \ud0dc\uadf8 \ube7c\uace0 \uc774\uc804 \ud0dc\uadf8\ub4e4 \ubaa8\ub450 \uc0ad\uc81c\ud558\ub294 \uc2a4\ud06c\ub9bd\ud2b8\uc785\ub2c8\ub2e4."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="registry-clear.sh"',title:'"registry-clear.sh"'},'#!/bin/bash\nprojects_json=$(curl -X GET "<REGISTRY URL:\ud3ec\ud2b8>/v2/_catalog")\nprojects=($(echo $projects_json | jq -r \'.repositories[]\'))\n\nfor project in "${projects[@]}"; do\n\n  echo "project name: $project"\n  tags_json=$(curl -s -X GET "<REGISTRY URL:\ud3ec\ud2b8>/v2/$project/tags/list")\n  tags=($(echo $tags_json | jq -r \'.tags[] | select(. != "latest")\'))\n\n  for tag in "${tags[@]}"; do\n\n    echo "tag: $tag"\n    digest=$(curl -v --silent -H "Accept: application/vnd.docker.distribution.manifest.v2+json" \\\n      -X GET "<REGISTRY URL:\ud3ec\ud2b8>/v2/$project/manifests/$tag" 2>&1 | grep docker-content-digest | awk \'{print $3}\')\n\n    if [ ! -z "$digest" ]; then\n      echo "digest: $digest"\n      digest=$(echo $digest | tr -d \'\\r\')\n      delete_response=$(curl -v --silent -H "Accept: application/vnd.docker.distribution.manifest.v2+json" \\\n        -X DELETE "<REGISTRY URL:\ud3ec\ud2b8>/v2/$project/manifests/$digest" 2>&1)\n      echo "Delete response: $delete_response"\n    else\n      echo "Digest not found - tag: $tag"\n    fi\n  done\n\n  exec=$(docker exec -it registry registry garbage-collect /etc/docker/registry/config.yml)\n  list=$(curl -X GET <REGISTRY URL:\ud3ec\ud2b8>/v2/$project/tags/list)\n  echo "Result: $list"\n\ndone\n')))}u.isMDXComponent=!0}}]);